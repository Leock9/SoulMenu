name: .NET 8 Build, Test, and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '8.0'

      - name: Install SonarCloud Scanner
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Install ReportGenerator
        run: dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Restore dependencies
        run: dotnet restore SoulMenu.sln

      - name: Build
        run: dotnet build SoulMenu.sln --no-restore

      - name: Run tests with coverage
        run: |
          dotnet test SoulMenu.Tests/SoulMenu.Tests.csproj --no-build --collect:"XPlat Code Coverage"
        continue-on-error: true

      - name: Convert coverage to XML
        run: |
          reportgenerator -reports:**/coverage.cobertura.xml -targetdir:coveragereport -reporttypes:Cobertura

      - name: Run SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet-sonarscanner begin /k:"Leock9_SoulMenu" /o:"Leock9" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.cs.opencover.reportsPaths="**/coverage.cobertura.xml"
          dotnet build src/SoulMenu.sln
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: build-and-test
    if: needs.build-and-test.result == 'success'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Build the Docker image
        working-directory: src
        run: |
          docker build -f Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/soulmenuapi:v1 .

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push the image to Docker Hub
        if: github.ref == 'refs/heads/main'
        run: docker push ${{ secrets.DOCKER_USERNAME }}/soulmenuapi:v1

  deploy-to-eks:
    if: github.ref == 'refs/heads/main' && needs.build-and-push-docker-image.result == 'success'
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}

      - name: Update kubeconfig with EKS cluster credentials
        run: aws eks update-kubeconfig --name ${{ secrets.EKS_CLUSTER_NAME }} --region us-east-1

      - name: Change permissions
        run: chmod +x k8s/*.yaml

      - name: Deploy to EKS
        run: |
          kubectl apply -f k8s/soulmenu-api-deployment.yml
          kubectl apply -f k8s/soulmenu-api-hpa.yml
          kubectl apply -f k8s/soulmenu-api-service.yml
          kubectl apply -f k8s/soulmenu-api-configmap.yml
